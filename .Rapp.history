#########################################################
####   MONOTONE REGRESSION        #######
#########################################################
#
	library(Rcpp)#
	sourceCpp("SLSE.cpp")#
	sourceCpp("Nadaraya_Watson.cpp")#
  	NumIt = 1000#
  	ngrid = 100#
  	n = 500#
  	m = 2#
  	sigma = 0.1#
#
  	f <- function(x) {x^2+x/5}#
  	#f <- function(x) {exp(4 * (x - 0.5))/(1+exp(4 * (x - 0.5)))}#
  	x0 <-seq(0,1,by=0.01)#
   	y0<-f(x0)#
   	percentages <- integer(ngrid-1)#
   	grid <- numeric(ngrid)#
   	for (i in (0:ngrid))#
   	{#
   		grid[i] = i/ngrid#
   	}#
   	B <- matrix(0, nrow = ngrid, ncol = 2)#
   	outputMat <- matrix(0, nrow= NumIt, ncol= 2, byrow = FALSE)#
   	colnames(outputMat) <- c("SLSE", "NW")#
 for (j in 1: NumIt)#
 {#
  	sim = j#
  	print(j)#
  	set.seed(sim)#
  	a = runif(n,0,1) #
  	b = f(a) + rnorm(n,0,sigma)#
  	X = matrix(cbind(a,b),n,m, byrow = FALSE)#
  	output <- SLSE(X,n)#
  	output2 <- NW(X,n)#
  	outputMat[j,] <- c(output$SLSE[60,2],output2$SLSE[60,2])#
  }#
  outputMat#
#
	pdf("BoxPlot_value.pdf")#
	boxplot(outputMat,las=1)#
	abline(h=f(grid[60]),lwd=2,lty=1,col = "red")#
	dev.off()
#########################################################
####   MONOTONE REGRESSION        #######
#########################################################
#
	library(Rcpp)#
	sourceCpp("SLSE.cpp")#
	sourceCpp("Nadaraya_Watson.cpp")#
  	NumIt = 1000#
  	ngrid = 100#
  	n = 100#
  	m = 2#
  	sigma = 0.1#
#
  	f <- function(x) {x^2+x/5}#
  	#f <- function(x) {exp(4 * (x - 0.5))/(1+exp(4 * (x - 0.5)))}#
  	x0 <-seq(0,1,by=0.01)#
   	y0<-f(x0)#
   	percentages <- integer(ngrid-1)#
   	grid <- numeric(ngrid)#
   	for (i in (0:ngrid))#
   	{#
   		grid[i] = i/ngrid#
   	}#
   	B <- matrix(0, nrow = ngrid, ncol = 2)#
   	outputMat <- matrix(0, nrow= NumIt, ncol= 2, byrow = FALSE)#
   	colnames(outputMat) <- c("SLSE", "NW")#
 for (j in 1: NumIt)#
 {#
  	sim = j#
  	print(j)#
  	set.seed(sim)#
  	a = runif(n,0,1) #
  	b = f(a) + rnorm(n,0,sigma)#
  	X = matrix(cbind(a,b),n,m, byrow = FALSE)#
  	output <- SLSE(X,n)#
  	output2 <- NW(X,n)#
  	outputMat[j,] <- c(output$SLSE[60,2],output2$SLSE[60,2])#
  }#
  outputMat#
#
	pdf("BoxPlot_value.pdf")#
	boxplot(outputMat,las=1)#
	abline(h=f(grid[60]),lwd=2,lty=1,col = "red")#
	dev.off()
#########################################################
####   MONOTONE REGRESSION        #######
#########################################################
#
	library(Rcpp)#
	sourceCpp("SLSE.cpp")#
	sourceCpp("Nadaraya_Watson.cpp")#
  	NumIt = 1000#
  	ngrid = 100#
  	n = 500#
  	m = 2#
  	sigma = 0.1#
#
  	f <- function(x) {x^2+x/5}#
  	#f <- function(x) {exp(4 * (x - 0.5))/(1+exp(4 * (x - 0.5)))}#
  	x0 <-seq(0,1,by=0.01)#
   	y0<-f(x0)#
   	percentages <- integer(ngrid-1)#
   	grid <- numeric(ngrid)#
   	for (i in (0:ngrid))#
   	{#
   		grid[i] = i/ngrid#
   	}#
   	B <- matrix(0, nrow = ngrid, ncol = 2)#
   	outputMat <- matrix(0, nrow= NumIt, ncol= 2, byrow = FALSE)#
   	colnames(outputMat) <- c("SLSE", "NW")#
 for (j in 1: NumIt)#
 {#
  	sim = j#
  	print(j)#
  	set.seed(sim)#
  	a = runif(n,0,1) #
  	b = f(a) + rnorm(n,0,sigma)#
  	X = matrix(cbind(a,b),n,m, byrow = FALSE)#
  	output <- SLSE(X,n)#
  	output2 <- NW(X,n)#
  	outputMat[j,] <- c(output$SLSE[60,2],output2$SLSE[60,2])#
  }#
  outputMat#
#
	pdf("BoxPlot_value.pdf")#
	boxplot(outputMat,las=1)#
	abline(h=f(grid[60]),lwd=2,lty=1,col = "red")#
	dev.off()
#########################################################
####   MONOTONE REGRESSION        #######
#########################################################
#
	library(Rcpp)#
	sourceCpp("CI_SLSE.cpp")#
	sourceCpp("CI_NW.cpp")#
  	NumIt = 1000#
  	ngrid = 100#
  	n = 500#
  	m = 2#
  	sigma = 0.1#
#
  	f <- function(x) {x^2+x/5}#
  	#f <- function(x) {exp(4 * (x - 0.5))/(1+exp(4 * (x - 0.5)))}#
  	x0 <-seq(0,1,by=0.01)#
   	y0<-f(x0)#
   	percentages1 <- integer(ngrid-1)#
   	percentages2 <- integer(ngrid-1)#
   	for (k in 1:(ngrid-1))#
   	{#
   		percentages1[k]<-0#
   		percentages2[k]<-0	#
   	}#
   	grid <- numeric(ngrid)#
   	for (i in (0:ngrid))#
   	{#
   		grid[i] = i/ngrid#
   	}#
   	B <- matrix(0, nrow = ngrid, ncol = 4)#
   	C <- matrix(0, nrow = ngrid, ncol = 4)#
 for (j in 1: NumIt)#
 {#
  	sim = 1000+j#
  	print(j)#
  	set.seed(sim)#
  	a = runif(n,0,1) #
  	b = f(a) + rnorm(n,0,sigma)#
  	X = matrix(cbind(a,b),n,m, byrow = FALSE)#
  	output1 <- CI_SLSE(X,n,sim)#
  	output2 <- CI_NW(X,n,sim)#
  	B <- output1$CI_SLSE#
  	C <- output2$CI_NW#
  	for (k in 1:(ngrid-1))#
  	{#
  		if (B[k,3]>f(grid[k]) || B[k,4]<f(grid[k]))#
  		{#
  			percentages1[k] <- percentages1[k]+1#
  		}#
  	}#
  	for (k in 1:(ngrid-1))#
  	{#
  		if (C[k,3]>f(grid[k]) || C[k,4]<f(grid[k]))#
  		{#
  			percentages2[k] <- percentages2[k]+1#
  		}#
  	}#
  }#
   	z1<-1-percentages1/NumIt#
   	z2<-1-percentages2/NumIt#
    	x1 <- seq(0.01,0.99,by=0.01) #
   	plot(c(-10000,-10000),xlim=c(0.0,1), ylim=c(0.85,1), main= "", ylab="",xlab="",bty="n",las=1)#
	lines(x1,z1,lty=1,lwd=2,col="blue")#
	lines(x1,z2,lty=1,lwd=2,col="red")#
	lines(c(0.0,1),c(0.95,0.95),lwd=2)
#########################################################
####   MONOTONE REGRESSION        #######
#########################################################
#
	library(Rcpp)#
	sourceCpp("bandwidth_choice.cpp")#
#
  	n = 100#
  	m = 2#
  	sigma = 0.1#
#
  	f <- function(x) {x^2+x/5}#
  	x0 <-seq(0,1,by=0.01)#
   	y0<-f(x0)#
  	sim = 1000#
  	set.seed(sim)#
  	a = runif(n,0,1) #
  	b = f(a) + rnorm(n,0,sigma)#
  	X = matrix(cbind(a,b),n,m, byrow = FALSE)#
  	output <- bandwidth(X,n,sim)#
  	B <- output$MSE#
   	x<-B[,1]#
   	y<-B[,2]#
   	plot(c(-10000,-10000),xlim=c(0,1), ylim=c(min(y),max(y)), main= "", ylab="",xlab="",bty="n",las=1)#
	lines(x,y,lty=1,lwd=2,col="blue")
#########################################################
####   MONOTONE REGRESSION        #######
#########################################################
#
	library(Rcpp)#
	sourceCpp("bandwidth_choice.cpp")#
#
  	n = 500#
  	m = 2#
  	sigma = 0.1#
#
  	f <- function(x) {x^2+x/5}#
  	x0 <-seq(0,1,by=0.01)#
   	y0<-f(x0)#
  	sim = 1000#
  	set.seed(sim)#
  	a = runif(n,0,1) #
  	b = f(a) + rnorm(n,0,sigma)#
  	X = matrix(cbind(a,b),n,m, byrow = FALSE)#
  	output <- bandwidth(X,n,sim)#
  	B <- output$MSE#
   	x<-B[,1]#
   	y<-B[,2]#
   	plot(c(-10000,-10000),xlim=c(0,1), ylim=c(min(y),max(y)), main= "", ylab="",xlab="",bty="n",las=1)#
	lines(x,y,lty=1,lwd=2,col="blue")
#########################################################
####   MONOTONE REGRESSION        #######
#########################################################
#
	library(Rcpp)#
	sourceCpp("bandwidth_choice.cpp")#
#
  	n = 100#
  	m = 2#
  	sigma = 0.1#
#
  	f <- function(x) {x^2+x/5}#
  	x0 <-seq(0,1,by=0.01)#
   	y0<-f(x0)#
  	sim = 1000#
  	set.seed(sim)#
  	a = runif(n,0,1) #
  	b = f(a) + rnorm(n,0,sigma)#
  	X = matrix(cbind(a,b),n,m, byrow = FALSE)#
  	output <- bandwidth(X,n,sim)#
  	B <- output$MSE#
   	x<-B[,1]#
   	y<-B[,2]#
   	plot(c(-10000,-10000),xlim=c(0,1), ylim=c(min(y),max(y)), main= "", ylab="",xlab="",bty="n",las=1)#
	lines(x,y,lty=1,lwd=2,col="blue")
#########################################################
####   MONOTONE REGRESSION        #######
#########################################################
#
	library(Rcpp)#
	sourceCpp("bandwidth_choice.cpp")#
#
  	n = 1000#
  	m = 2#
  	sigma = 0.1#
#
  	f <- function(x) {x^2+x/5}#
  	x0 <-seq(0,1,by=0.01)#
   	y0<-f(x0)#
  	sim = 1000#
  	set.seed(sim)#
  	a = runif(n,0,1) #
  	b = f(a) + rnorm(n,0,sigma)#
  	X = matrix(cbind(a,b),n,m, byrow = FALSE)#
  	output <- bandwidth(X,n,sim)#
  	B <- output$MSE#
   	x<-B[,1]#
   	y<-B[,2]#
   	plot(c(-10000,-10000),xlim=c(0,1), ylim=c(min(y),max(y)), main= "", ylab="",xlab="",bty="n",las=1)#
	lines(x,y,lty=1,lwd=2,col="blue")
#########################################################
####   MONOTONE REGRESSION        #######
#########################################################
#
	library(Rcpp)#
	sourceCpp("bandwidth_choice.cpp")#
#
  	n = 500#
  	m = 2#
  	sigma = 0.1#
#
  	f <- function(x) {x^2+x/5}#
  	x0 <-seq(0,1,by=0.01)#
   	y0<-f(x0)#
  	sim = 1000#
  	set.seed(sim)#
  	a = runif(n,0,1) #
  	b = f(a) + rnorm(n,0,sigma)#
  	X = matrix(cbind(a,b),n,m, byrow = FALSE)#
  	output <- bandwidth(X,n,sim)#
  	B <- output$MSE#
   	x<-B[,1]#
   	y<-B[,2]#
   	plot(c(-10000,-10000),xlim=c(0,1), ylim=c(min(y),max(y)), main= "", ylab="",xlab="",bty="n",las=1)#
	lines(x,y,lty=1,lwd=2,col="blue")
B<-read.table("MSE.txt")#
   C<-read.table("MSE0.txt")#
   x<-B[,1]#
   y<-B[,3]#
   x1<-C[,1]#
   y1<-C[,3]#
   plot(c(-1000,-1000),xlim=c(min(x),max(x)), ylim=c(min(y),max(y)), main= "",ylab="",xlab="",bty="n",las=1)#
   lines(x,y,lwd=2,col="blue")#
   lines(x1,y1,lwd=2,col="red")
#########################################################
####   MONOTONE REGRESSION        #######
#########################################################
#
	library(Rcpp)#
	sourceCpp("bandwidth_choice.cpp")#
#
  	n = 1000#
  	m = 2#
  	sigma = 0.1#
#
  	f <- function(x) {x^2+x/5}#
  	x0 <-seq(0,1,by=0.01)#
   	y0<-f(x0)#
  	sim = 1000#
  	set.seed(sim)#
  	a = runif(n,0,1) #
  	b = f(a) + rnorm(n,0,sigma)#
  	X = matrix(cbind(a,b),n,m, byrow = FALSE)#
  	output <- bandwidth(X,n,sim)#
  	B <- output$MSE#
   	x<-B[,1]#
   	y<-B[,2]#
   	plot(c(-10000,-10000),xlim=c(0,1), ylim=c(min(y),max(y)), main= "", ylab="",xlab="",bty="n",las=1)#
	lines(x,y,lty=1,lwd=2,col="blue")
output
#########################################################
####   MONOTONE REGRESSION        #######
#########################################################
#
	library(Rcpp)#
	sourceCpp("bandwidth_choice2.cpp")#
#
  	n = 1000#
  	m = 2#
  	sigma = 0.1#
#
  	#f <- function(x) {x^2+x/5}#
  	f <- function(x) {exp(4 * (x - 0.5))/(1+exp(4 * (x - 0.5)))}#
  	x0 <-seq(0,1,by=0.01)#
   	y0<-f(x0)#
  	sim = 1000#
  	set.seed(sim)#
  	a = runif(n,0,1) #
  	b = f(a) + rnorm(n,0,sigma)#
  	X = matrix(cbind(a,b),n,m, byrow = FALSE)#
  	output <- bandwidth(X,n,sim)#
  	B <- output$MSE#
   	x<-B[,1]#
   	y<-B[,2]#
   	plot(c(-10000,-10000),xlim=c(0,1.5), ylim=c(min(y),max(y)), main= "", ylab="",xlab="",bty="n",las=1)#
	lines(x,y,lty=1,lwd=2,col="blue")
#########################################################
####   MONOTONE REGRESSION        #######
#########################################################
#
	library(Rcpp)#
	sourceCpp("bandwidth_choice.cpp")#
#
  	n = 1000#
  	m = 2#
  	sigma = 0.1#
#
  	f <- function(x) {x^2+x/5}#
  	x0 <-seq(0,1,by=0.01)#
   	y0<-f(x0)#
  	sim = 1000#
  	set.seed(sim)#
  	a = runif(n,0,1) #
  	b = f(a) + rnorm(n,0,sigma)#
  	X = matrix(cbind(a,b),n,m, byrow = FALSE)#
  	output <- bandwidth(X,n,sim)#
  	B <- output$MSE#
   	x<-B[,1]#
   	y<-B[,2]#
   	plot(c(-10000,-10000),xlim=c(0,1), ylim=c(min(y),max(y)), main= "", ylab="",xlab="",bty="n",las=1)#
	lines(x,y,lty=1,lwd=2,col="blue")
#########################################################
####   MONOTONE REGRESSION        #######
#########################################################
#
	library(Rcpp)#
	sourceCpp("bandwidth_choice.cpp")#
#
  	n = 1000#
  	m = 2#
  	sigma = 0.5#
#
  	f <- function(x) {x^2+x/5}#
  	x0 <-seq(0,1,by=0.01)#
   	y0<-f(x0)#
  	sim = 1000#
  	set.seed(sim)#
  	a = runif(n,0,1) #
  	b = f(a) + rnorm(n,0,sigma)#
  	X = matrix(cbind(a,b),n,m, byrow = FALSE)#
  	output <- bandwidth(X,n,sim)#
  	B <- output$MSE#
   	x<-B[,1]#
   	y<-B[,2]#
   	plot(c(-10000,-10000),xlim=c(0,1), ylim=c(min(y),max(y)), main= "", ylab="",xlab="",bty="n",las=1)#
	lines(x,y,lty=1,lwd=2,col="blue")
#########################################################
####   MONOTONE REGRESSION        #######
#########################################################
#
	library(Rcpp)#
	sourceCpp("bandwidth_choice.cpp")#
#
  	n = 500#
  	m = 2#
  	sigma = 0.5#
#
  	f <- function(x) {x^2+x/5}#
  	x0 <-seq(0,1,by=0.01)#
   	y0<-f(x0)#
  	sim = 1000#
  	set.seed(sim)#
  	a = runif(n,0,1) #
  	b = f(a) + rnorm(n,0,sigma)#
  	X = matrix(cbind(a,b),n,m, byrow = FALSE)#
  	output <- bandwidth(X,n,sim)#
  	B <- output$MSE#
   	x<-B[,1]#
   	y<-B[,2]#
   	plot(c(-10000,-10000),xlim=c(0,1), ylim=c(min(y),max(y)), main= "", ylab="",xlab="",bty="n",las=1)#
	lines(x,y,lty=1,lwd=2,col="blue")
#########################################################
####   MONOTONE REGRESSION        #######
#########################################################
#
	library(Rcpp)#
	sourceCpp("bandwidth_choice.cpp")#
#
  	n = 500#
  	m = 2#
  	sigma = 0.5#
#
  	#f <- function(x) {x^2+x/5}#
  	f <- function(x) {exp(4 * (x - 0.5))/(1+exp(4 * (x - 0.5)))}#
  	x0 <-seq(0,1,by=0.01)#
   	y0<-f(x0)#
  	sim = 1000#
  	set.seed(sim)#
  	a = runif(n,0,1) #
  	b = f(a) + rnorm(n,0,sigma)#
  	X = matrix(cbind(a,b),n,m, byrow = FALSE)#
  	output <- bandwidth(X,n,sim)#
  	B <- output$MSE#
   	x<-B[,1]#
   	y<-B[,2]#
   	plot(c(-10000,-10000),xlim=c(0,1), ylim=c(min(y),max(y)), main= "", ylab="",xlab="",bty="n",las=1)#
	lines(x,y,lty=1,lwd=2,col="blue")
plot(c(-10000,-10000),xlim=c(0,max(x)), ylim=c(min(y),max(y)), main= "", ylab="",xlab="",bty="n",las=1)#
	lines(x,y,lty=1,lwd=2,col="blue")
#########################################################
####   MONOTONE REGRESSION        #######
#########################################################
#
	library(Rcpp)#
	sourceCpp("bandwidth_choice.cpp")#
#
  	n = 500#
  	m = 2#
  	sigma = 0.1#
#
  	#f <- function(x) {x^2+x/5}#
  	f <- function(x) {exp(4 * (x - 0.5))/(1+exp(4 * (x - 0.5)))}#
  	x0 <-seq(0,1,by=0.01)#
   	y0<-f(x0)#
  	sim = 1000#
  	set.seed(sim)#
  	a = runif(n,0,1) #
  	b = f(a) + rnorm(n,0,sigma)#
  	X = matrix(cbind(a,b),n,m, byrow = FALSE)#
  	output <- bandwidth(X,n,sim)#
  	B <- output$MSE#
   	x<-B[,1]#
   	y<-B[,2]#
   	plot(c(-10000,-10000),xlim=c(0,max(x)), ylim=c(min(y),max(y)), main= "", ylab="",xlab="",bty="n",las=1)#
	lines(x,y,lty=1,lwd=2,col="blue")
#########################################################
####   MONOTONE REGRESSION        #######
#########################################################
#
	library(Rcpp)#
	sourceCpp("bandwidth_choice.cpp")#
#
  	n = 500#
  	m = 2#
  	sigma = 0.1#
  	B=10000#
#
  	#f <- function(x) {x^2+x/5}#
  	f <- function(x) {exp(4 * (x - 0.5))/(1+exp(4 * (x - 0.5)))}#
  	x0 <-seq(0,1,by=0.01)#
   	y0<-f(x0)#
  	sim = 1000#
  	set.seed(sim)#
  	a = runif(n,0,1) #
  	b = f(a) + rnorm(n,0,sigma)#
  	X = matrix(cbind(a,b),n,m, byrow = FALSE)#
  	output <- bandwidth(X,n,sim,B)#
  	C <- output$MSE#
   	x<-C[,1]#
   	y<-C[,2]#
   	plot(c(-10000,-10000),xlim=c(0,max(x)), ylim=c(min(y),max(y)), main= "", ylab="",xlab="",bty="n",las=1)#
	lines(x,y,lty=1,lwd=2,col="blue")
#########################################################
####   MONOTONE REGRESSION        #######
#########################################################
#
	library(Rcpp)#
	sourceCpp("bandwidth_choice.cpp")#
#
  	n = 500#
  	m = 2#
  	sigma = 0.1#
  	B=10000#
#
  	f <- function(x) {x^2+x/5}#
  	#f <- function(x) {exp(4 * (x - 0.5))/(1+exp(4 * (x - 0.5)))}#
  	x0 <-seq(0,1,by=0.01)#
   	y0<-f(x0)#
  	sim = 1000#
  	set.seed(sim)#
  	a = runif(n,0,1) #
  	b = f(a) + rnorm(n,0,sigma)#
  	X = matrix(cbind(a,b),n,m, byrow = FALSE)#
  	output <- bandwidth(X,n,sim,B)#
  	C <- output$MSE#
   	x<-C[,1]#
   	y<-C[,2]#
   	plot(c(-10000,-10000),xlim=c(0,max(x)), ylim=c(min(y),max(y)), main= "", ylab="",xlab="",bty="n",las=1)#
	lines(x,y,lty=1,lwd=2,col="blue")
plot(c(-10000,-10000),xlim=c(0,1), ylim=c(min(y),max(y)), main= "", ylab="",xlab="",bty="n",las=1)#
	lines(x,y,lty=1,lwd=2,col="blue")
#########################################################
####   MONOTONE REGRESSION        #######
#########################################################
#
	library(Rcpp)#
	sourceCpp("bandwidth_choice.cpp")#
#
  	n = 500#
  	m = 2#
  	sigma = 0.1#
  	B=10000#
#
  	f <- function(x) {x^2+x/5}#
  	#f <- function(x) {exp(4 * (x - 0.5))/(1+exp(4 * (x - 0.5)))}#
  	x0 <-seq(0,1,by=0.01)#
   	y0<-f(x0)#
  	sim = 1000#
  	set.seed(sim)#
  	a = runif(n,0,1) #
  	b = f(a) + rnorm(n,0,sigma)#
  	X = matrix(cbind(a,b),n,m, byrow = FALSE)#
  	output <- bandwidth(X,n,sim,B)#
  	C <- output$MSE#
   	x<-C[,1]#
   	y<-C[,2]#
   	plot(c(-10000,-10000),xlim=c(0,1), ylim=c(min(y),max(y)), main= "", ylab="",xlab="",bty="n",las=1)#
	lines(x,y,lty=1,lwd=2,col="blue")
#########################################################
####   MONOTONE REGRESSION        #######
#########################################################
#
	library(Rcpp)#
	sourceCpp("bandwidth_choice.cpp")#
#
  	n = 500#
  	m = 2#
  	sigma = 0.1#
  	B=10000#
#
  	f <- function(x) {x^2+x/5}#
  	#f <- function(x) {exp(4 * (x - 0.5))/(1+exp(4 * (x - 0.5)))}#
  	x0 <-seq(0,1,by=0.01)#
   	y0<-f(x0)#
  	sim = 1000#
  	set.seed(sim)#
  	a = runif(n,0,1) #
  	b = f(a) + rnorm(n,0,sigma)#
  	X = matrix(cbind(a,b),n,m, byrow = FALSE)#
  	output <- bandwidth(X,n,sim,B)#
  	C <- output$MSE#
   	x<-C[,1]#
   	y<-C[,2]#
   	plot(c(-10000,-10000),xlim=c(0,1), ylim=c(min(y),max(y)), main= "", ylab="",xlab="",bty="n",las=1)#
	lines(x,y,lty=1,lwd=2,col="blue")
output
